steps:
  - input: "Build parameters"
    if: build.source == "ui"
    fields:
      - select: "Rebuild?"
        key: "REBUILD"
        default: false
        required: false
        options:
          - label: "no"
            value: false
          - label: "yes"
            value: true
        hint: "Should all books be rebuilt, regardless of what has changed? Build once with this set to true after every release."
      - select: "How should broken links be handled?"
        key: "BROKEN_LINKS"
        default: false
        required: false
        options:
          - label: "Continue without warning"
            value: "skip"
          - label: "Continue, but log a warning"
            value: "warn"
          - label: "Fail the build"
            value: false
        hint: "Should we ignore checking broken links? Should we allow to run the build without failing if there's a broken link? Ignoring broken links is dangerous not just because bad links will leak into the public site but because subsequent builds and pull requests that do not fix the links fail."
  - wait
  - label: ":white_check_mark: Build docs"
    command: |
      export REBUILD="$(buildkite-agent meta-data get REBUILD --default false)"
      export BROKEN_LINKS="$(buildkite-agent meta-data get BROKEN_LINKS --default false)"
      bash .buildkite/scripts/build-docs.sh
    #branches: "master"
    agents:
      provider: "gcp"
      image: family/docs-ubuntu-2204


