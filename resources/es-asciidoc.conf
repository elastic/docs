#
# Asciidoc customizations for Elasticsearch
#

[macros]
(?ums)^\s*[\\]?(?P<name>(coming|added|deprecated))\[(?P<es_version>[^,\]]+)\]\s*$=#[]
(?ums)^\s*[\\]?(?P<name>(coming|added|deprecated))\[(?P<es_version>[^,]+),(?P<passtext>[^\]]+)\]\s*$=#[normal]
(?ums)^\s*[\\]?(?P<name>(experimental))\[\s*(?P<passtext>[^\]]+?)\s*]\s*$=#[normal]
(?ums)^\s*[\\]?(?P<name>(experimental))\[]\s*$=#[]
(?ums)^\s*[\\]?(?P<name>(beta))\[\s*(?P<passtext>[^\]]+?)\s*]\s*$=#[normal]
(?ums)^\s*[\\]?(?P<name>(beta))\[]\s*$=#[]
(?us)[\\]?(?P<name>(coming|added|deprecated))\[(?P<attrlist>.+?)\]=[]
(?us)[\\]?(?P<name>(experimental))\[\s*(?P<passtext>[^\]]+?)\s*]=[]
(?us)[\\]?(?P<name>(experimental))\[]=[]
(?us)[\\]?(?P<name>(beta))\[\s*(?P<passtext>[^\]]+?)\s*]=[]
(?us)[\\]?(?P<name>(beta))\[]=[]
(?us)^\s*[\\]?(?P<name>include-tagged)::(?P<file>[^\[]+)\[(?P<tag>[^\]]+)\]\s*$=[]

[added-inlinemacro]
<phrase revisionflag="added" revision="{1}">
{2}
</phrase>

[coming-inlinemacro]
<phrase revisionflag="changed" revision="{1}">
{2}
</phrase>

[deprecated-inlinemacro]
<phrase revisionflag="deleted" revision="{1}">
{2}
</phrase>

[experimental-inlinemacro]
<phrase role="experimental">
{passtext}
</phrase>

[beta-inlinemacro]
<phrase role="beta">
{passtext}
</phrase>

[include-tagged-inlinemacro]
# it is a nightmare to get this to work without forking so we use sys3 to fork a new process every time....
{sys3:{python} {asciidoc-dir}/../extract-tagged.py {file} {tag}}

[added-blockmacro]
<note revisionflag="added" revision="{es_version}"><simpara>
{passtext}
</simpara></note>

[coming-blockmacro]
<note revisionflag="changed" revision="{es_version}"><simpara>
{passtext}
</simpara></note>

[deprecated-blockmacro]
<warning revisionflag="deleted" revision="{es_version}"><simpara>
{passtext}
</simpara></warning>

[experimental-blockmacro]
<warning role="experimental"><simpara>
{passtext}
</simpara></warning>

[beta-blockmacro]
<warning role="beta"><simpara>
{passtext}
</simpara></warning>


#-------------------------
# book document type
#-------------------------
ifdef::doctype-book[]

[attributes]
edit_url=
base_edit_url=

[header]
template::[header-declarations]

<book lang="{lang=en}">
<bookinfo>
template::[docinfo]
</bookinfo>

[footer]
</book>

[preface]
<preface{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</preface>

[index]
<index{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</index>

[bibliography]
<bibliography{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</bibliography>

[glossary]
<glossary{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</glossary>

[appendix]
<appendix{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</appendix>

[preamble]
# Preamble is not allowed in DocBook book so wrap it in a preface.
<preface{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</preface>

[dedication]
<dedication{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</dedication>

[colophon]
<colophon{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</colophon>

[sect0]
<part{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</part>

[sect1]
<chapter{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</chapter>

[sect2]
<section{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</section>

[sect3]
<section{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</section>

[sect4]
<section{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"}>
{edit_url%}<title>{title}</title>
{edit_url#}{edit_url$^.*/[^/]+$:}<title>{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></title>
{edit_url#}{edit_url$^.*/[^/]+$::}<title>{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></title>
|
</section>

[floatingtitle]
{edit_url%}<bridgehead{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"} renderas="sect{level}">{title}</bridgehead>
{edit_url#}{edit_url$^.*/[^/]+$:}<bridgehead{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"} renderas="sect{level}">{title}<ulink role="edit_me" url="{edit_url}">Edit me</ulink></bridgehead>
{edit_url#}{edit_url$^.*/[^/]+$::}<bridgehead{id? id="{id}"}{role? role="{role}"}{reftext? xreflabel="{reftext}"} renderas="sect{level}">{title}<ulink role="edit_me" url="{eval:"{edit_url}" or "{base_edit_url}"}{eval:os.path.relpath("{infile}","{root_dir}")}">Edit me</ulink></bridgehead>

endif::doctype-book[]
